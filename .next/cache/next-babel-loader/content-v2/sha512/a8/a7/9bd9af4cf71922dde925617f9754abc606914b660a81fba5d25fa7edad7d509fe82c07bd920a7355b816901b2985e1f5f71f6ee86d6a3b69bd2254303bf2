{"ast":null,"code":"/**\n * Media query breakpoints\n */\nexport const media = {\n  desktop: 2080,\n  laptop: 1680,\n  tablet: 1024,\n  mobile: 696,\n  mobileS: 400\n};\n/**\n * Convert a px string to a number\n */\n\nexport const pxToNum = px => Number(px.replace('px', ''));\n/**\n * Convert a number to a px string\n */\n\nexport const numToPx = num => `${num}px`;\n/**\n * Convert pixel values to rem for a11y\n */\n\nexport const pxToRem = px => `${px / 16}rem`;\n/**\n * Convert ms token values to a raw numbers for ReactTransitionGroup\n * Transition delay props\n */\n\nexport const msToNum = msString => Number(msString.replace('ms', ''));\n/**\n * Convert a number to an ms string\n */\n\nexport const numToMs = num => `${num}ms`;\n/**\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\n * to values that can be spread into a ThreeJS Color class\n */\n\nexport const rgbToThreeColor = rgb => rgb.split(' ').map(value => Number(value) / 255);","map":{"version":3,"sources":["/home/rinspiron/Desktop/portfolio/portfolio/components/utils/style.js"],"names":["media","desktop","laptop","tablet","mobile","mobileS","pxToNum","px","Number","replace","numToPx","num","pxToRem","msToNum","msString","numToMs","rgbToThreeColor","rgb","split","map","value"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,MAAM,EAAE,GAJW;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAAd;AAQP;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGC,EAAE,IAAIC,MAAM,CAACD,EAAE,CAACE,OAAH,CAAW,IAAX,EAAiB,EAAjB,CAAD,CAA5B;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGC,GAAG,IAAK,GAAEA,GAAI,IAA9B;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGL,EAAE,IAAK,GAAEA,EAAE,GAAG,EAAG,KAAjC;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMM,OAAO,GAAGC,QAAQ,IAAIN,MAAM,CAACM,QAAQ,CAACL,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,CAAD,CAAlC;AAEP;AACA;AACA;;AACA,OAAO,MAAMM,OAAO,GAAGJ,GAAG,IAAK,GAAEA,GAAI,IAA9B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMK,eAAe,GAAGC,GAAG,IAAIA,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmBC,KAAK,IAAIZ,MAAM,CAACY,KAAD,CAAN,GAAgB,GAA5C,CAA/B","sourcesContent":["/**\n * Media query breakpoints\n */\nexport const media = {\n  desktop: 2080,\n  laptop: 1680,\n  tablet: 1024,\n  mobile: 696,\n  mobileS: 400,\n};\n\n/**\n * Convert a px string to a number\n */\nexport const pxToNum = px => Number(px.replace('px', ''));\n\n/**\n * Convert a number to a px string\n */\nexport const numToPx = num => `${num}px`;\n\n/**\n * Convert pixel values to rem for a11y\n */\nexport const pxToRem = px => `${px / 16}rem`;\n\n/**\n * Convert ms token values to a raw numbers for ReactTransitionGroup\n * Transition delay props\n */\nexport const msToNum = msString => Number(msString.replace('ms', ''));\n\n/**\n * Convert a number to an ms string\n */\nexport const numToMs = num => `${num}ms`;\n\n/**\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\n * to values that can be spread into a ThreeJS Color class\n */\nexport const rgbToThreeColor = rgb => rgb.split(' ').map(value => Number(value) / 255);"]},"metadata":{},"sourceType":"module"}