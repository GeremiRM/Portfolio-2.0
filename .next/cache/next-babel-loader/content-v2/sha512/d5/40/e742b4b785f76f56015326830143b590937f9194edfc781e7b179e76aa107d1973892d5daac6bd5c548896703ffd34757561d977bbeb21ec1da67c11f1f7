{"ast":null,"code":"function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/**\n * Clean up a scene's materials and geometry\n */\nexport var cleanScene = function cleanScene(scene) {\n  scene.traverse(function (object) {\n    if (!object.isMesh) return;\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      var _iterator = _createForOfIteratorHelper(object.material),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var material = _step.value;\n          cleanMaterial(material);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  });\n};\n/**\n * Clean up and dispose of a material\n */\n\nexport var cleanMaterial = function cleanMaterial(material) {\n  material.dispose();\n\n  for (var _i = 0, _Object$keys = Object.keys(material); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = material[key];\n\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n/**\n * Clean up and dispose of a renderer\n */\n\nexport var cleanRenderer = function cleanRenderer(renderer) {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n/**\n * Clean up lights by removing them from their parent\n */\n\nexport var removeLights = function removeLights(lights) {\n  var _iterator2 = _createForOfIteratorHelper(lights),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var light = _step2.value;\n      light.parent.remove(light);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n};","map":{"version":3,"sources":["/home/rinspiron/Desktop/portfolio/portfolio/components/utils/three.js"],"names":["cleanScene","scene","traverse","object","isMesh","geometry","dispose","material","isMaterial","cleanMaterial","Object","keys","key","value","cleanRenderer","renderer","forceContextLoss","removeLights","lights","light","parent","remove"],"mappings":";;;;;;AAAA;AACA;AACA;AACA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK,EAAI;AAC/BA,EAAAA,KAAK,CAACC,QAAN,CAAe,UAAAC,MAAM,EAAI;AACvB,QAAI,CAACA,MAAM,CAACC,MAAZ,EAAoB;AAEpBD,IAAAA,MAAM,CAACE,QAAP,CAAgBC,OAAhB;;AAEA,QAAIH,MAAM,CAACI,QAAP,CAAgBC,UAApB,EAAgC;AAC9BC,MAAAA,aAAa,CAACN,MAAM,CAACI,QAAR,CAAb;AACD,KAFD,MAEO;AAAA,iDACkBJ,MAAM,CAACI,QADzB;AAAA;;AAAA;AACL,4DAAwC;AAAA,cAA7BA,QAA6B;AACtCE,UAAAA,aAAa,CAACF,QAAD,CAAb;AACD;AAHI;AAAA;AAAA;AAAA;AAAA;AAIN;AACF,GAZD;AAaD,CAdI;AAgBL;AACF;AACA;;AACE,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAAAF,QAAQ,EAAI;AACvCA,EAAAA,QAAQ,CAACD,OAAT;;AAEA,kCAAkBI,MAAM,CAACC,IAAP,CAAYJ,QAAZ,CAAlB,kCAAyC;AAApC,QAAMK,GAAG,mBAAT;AACH,QAAMC,KAAK,GAAGN,QAAQ,CAACK,GAAD,CAAtB;;AACA,QAAIC,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA1B,IAAsC,eAAeA,KAAzD,EAAgE;AAC9DA,MAAAA,KAAK,CAACP,OAAN;AACD;AACF;AACF,CATM;AAWP;AACF;AACA;;AACE,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,QAAQ,EAAI;AACvCA,EAAAA,QAAQ,CAACT,OAAT;AACAS,EAAAA,QAAQ,CAACC,gBAAT;AACAD,EAAAA,QAAQ,GAAG,IAAX;AACD,CAJM;AAMP;AACF;AACA;;AACE,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,MAAM,EAAI;AAAA,8CAChBA,MADgB;AAAA;;AAAA;AACpC,2DAA4B;AAAA,UAAjBC,KAAiB;AAC1BA,MAAAA,KAAK,CAACC,MAAN,CAAaC,MAAb,CAAoBF,KAApB;AACD;AAHmC;AAAA;AAAA;AAAA;AAAA;AAIrC,CAJM","sourcesContent":["/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n    scene.traverse(object => {\n      if (!object.isMesh) return;\n  \n      object.geometry.dispose();\n  \n      if (object.material.isMaterial) {\n        cleanMaterial(object.material);\n      } else {\n        for (const material of object.material) {\n          cleanMaterial(material);\n        }\n      }\n    });\n  };\n  \n  /**\n   * Clean up and dispose of a material\n   */\n  export const cleanMaterial = material => {\n    material.dispose();\n  \n    for (const key of Object.keys(material)) {\n      const value = material[key];\n      if (value && typeof value === 'object' && 'minFilter' in value) {\n        value.dispose();\n      }\n    }\n  };\n  \n  /**\n   * Clean up and dispose of a renderer\n   */\n  export const cleanRenderer = renderer => {\n    renderer.dispose();\n    renderer.forceContextLoss();\n    renderer = null;\n  };\n  \n  /**\n   * Clean up lights by removing them from their parent\n   */\n  export const removeLights = lights => {\n    for (const light of lights) {\n      light.parent.remove(light);\n    }\n  };"]},"metadata":{},"sourceType":"module"}