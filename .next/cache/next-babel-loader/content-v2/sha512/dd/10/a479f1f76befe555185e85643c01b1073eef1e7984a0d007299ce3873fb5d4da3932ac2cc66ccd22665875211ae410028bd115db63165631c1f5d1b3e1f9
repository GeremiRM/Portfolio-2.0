{"ast":null,"code":"/**\n * Media query breakpoints\n */\nexport var media = {\n  desktop: 2080,\n  laptop: 1680,\n  tablet: 1024,\n  mobile: 696,\n  mobileS: 400\n};\n/**\n * Convert a px string to a number\n */\n\nexport var pxToNum = function pxToNum(px) {\n  return Number(px.replace('px', ''));\n};\n/**\n * Convert a number to a px string\n */\n\nexport var numToPx = function numToPx(num) {\n  return \"\".concat(num, \"px\");\n};\n/**\n * Convert pixel values to rem for a11y\n */\n\nexport var pxToRem = function pxToRem(px) {\n  return \"\".concat(px / 16, \"rem\");\n};\n/**\n * Convert ms token values to a raw numbers for ReactTransitionGroup\n * Transition delay props\n */\n\nexport var msToNum = function msToNum(msString) {\n  return Number(msString.replace('ms', ''));\n};\n/**\n * Convert a number to an ms string\n */\n\nexport var numToMs = function numToMs(num) {\n  return \"\".concat(num, \"ms\");\n};\n/**\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\n * to values that can be spread into a ThreeJS Color class\n */\n\nexport var rgbToThreeColor = function rgbToThreeColor(rgb) {\n  return rgb.split(' ').map(function (value) {\n    return Number(value) / 255;\n  });\n};","map":{"version":3,"sources":["/home/rinspiron/Desktop/portfolio/portfolio/components/utils/style.js"],"names":["media","desktop","laptop","tablet","mobile","mobileS","pxToNum","px","Number","replace","numToPx","num","pxToRem","msToNum","msString","numToMs","rgbToThreeColor","rgb","split","map","value"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,IAAMA,KAAK,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,MAAM,EAAE,GAJW;AAKnBC,EAAAA,OAAO,EAAE;AALU,CAAd;AAQP;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,EAAE;AAAA,SAAIC,MAAM,CAACD,EAAE,CAACE,OAAH,CAAW,IAAX,EAAiB,EAAjB,CAAD,CAAV;AAAA,CAAlB;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG;AAAA,mBAAOA,GAAP;AAAA,CAAnB;AAEP;AACA;AACA;;AACA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAL,EAAE;AAAA,mBAAOA,EAAE,GAAG,EAAZ;AAAA,CAAlB;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ;AAAA,SAAIN,MAAM,CAACM,QAAQ,CAACL,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,CAAD,CAAV;AAAA,CAAxB;AAEP;AACA;AACA;;AACA,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAAAJ,GAAG;AAAA,mBAAOA,GAAP;AAAA,CAAnB;AAEP;AACA;AACA;AACA;;AACA,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmB,UAAAC,KAAK;AAAA,WAAIZ,MAAM,CAACY,KAAD,CAAN,GAAgB,GAApB;AAAA,GAAxB,CAAJ;AAAA,CAA3B","sourcesContent":["/**\n * Media query breakpoints\n */\nexport const media = {\n  desktop: 2080,\n  laptop: 1680,\n  tablet: 1024,\n  mobile: 696,\n  mobileS: 400,\n};\n\n/**\n * Convert a px string to a number\n */\nexport const pxToNum = px => Number(px.replace('px', ''));\n\n/**\n * Convert a number to a px string\n */\nexport const numToPx = num => `${num}px`;\n\n/**\n * Convert pixel values to rem for a11y\n */\nexport const pxToRem = px => `${px / 16}rem`;\n\n/**\n * Convert ms token values to a raw numbers for ReactTransitionGroup\n * Transition delay props\n */\nexport const msToNum = msString => Number(msString.replace('ms', ''));\n\n/**\n * Convert a number to an ms string\n */\nexport const numToMs = num => `${num}ms`;\n\n/**\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\n * to values that can be spread into a ThreeJS Color class\n */\nexport const rgbToThreeColor = rgb => rgb.split(' ').map(value => Number(value) / 255);"]},"metadata":{},"sourceType":"module"}