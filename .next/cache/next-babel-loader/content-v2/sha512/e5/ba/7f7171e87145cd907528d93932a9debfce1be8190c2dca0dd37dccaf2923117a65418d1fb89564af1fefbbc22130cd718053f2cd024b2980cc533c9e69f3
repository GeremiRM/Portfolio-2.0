{"ast":null,"code":"import _defineProperty from \"/home/rinspiron/Desktop/portfolio/portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _construct from \"/home/rinspiron/Desktop/portfolio/portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/construct\";\nimport _toConsumableArray from \"/home/rinspiron/Desktop/portfolio/portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"/home/rinspiron/Desktop/portfolio/portfolio/components/DisplacementSphere/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Many thanks to Hamish William.\n * Source: https://github.com/HamishMW/portfolio\n * Also check out their website: https://hamishw.com/\n */\nimport { useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { Vector2, sRGBEncoding, WebGLRenderer, PerspectiveCamera, Scene, DirectionalLight, AmbientLight, UniformsUtils, UniformsLib, MeshPhongMaterial, SphereBufferGeometry, Mesh, Color } from \"three\";\nimport { value, spring } from \"popmotion\";\nimport vertShader from \"./sphereVertShader\";\nimport fragShader from \"./sphereFragShader\";\nimport { Transition } from \"react-transition-group\";\nimport usePrefersReducedMotion from \"./hooks/usePrefersReducedMotion\";\nimport useInViewport from \"./hooks/useInViewport\";\nimport useWindowSize from \"./hooks/useWindowSize\";\nimport { reflow } from \"./utils/transition\";\nimport { media, rgbToThreeColor } from \"./utils/style\";\nimport { cleanScene, removeLights, cleanRenderer } from \"./utils/three\";\nimport \"./DisplacementSphere.module.scss\";\n\nvar DisplacementSphere = function DisplacementSphere(props) {\n  _s();\n\n  var _props$theme = props.theme,\n      rgbBackground = _props$theme.rgbBackground,\n      themeId = _props$theme.themeId,\n      colorWhite = _props$theme.colorWhite;\n  var start = useRef(Date.now());\n  var canvasRef = useRef();\n  var mouse = useRef();\n  var renderer = useRef();\n  var camera = useRef();\n  var scene = useRef();\n  var lights = useRef();\n  var uniforms = useRef();\n  var material = useRef();\n  var geometry = useRef();\n  var sphere = useRef();\n  var tweenRef = useRef();\n  var sphereSpring = useRef();\n  var prefersReducedMotion = usePrefersReducedMotion();\n  var isInViewport = useInViewport(canvasRef);\n  var windowSize = useWindowSize();\n  useEffect(function () {\n    var _window = window,\n        innerWidth = _window.innerWidth,\n        innerHeight = _window.innerHeight;\n    mouse.current = new Vector2(0.8, 0.5);\n    renderer.current = new WebGLRenderer({\n      canvas: canvasRef.current,\n      antialias: false,\n      powerPreference: \"high-performance\"\n    });\n    renderer.current.setSize(innerWidth, innerHeight);\n    renderer.current.setPixelRatio(1);\n    renderer.current.outputEncoding = camera.current = new PerspectiveCamera(54, innerWidth / innerHeight, 0.1, 100);\n    camera.current.position.z = 52;\n    scene.current = new Scene();\n    material.current = new MeshPhongMaterial();\n\n    material.current.onBeforeCompile = function (shader) {\n      uniforms.current = UniformsUtils.merge([UniformsLib[\"ambient\"], UniformsLib[\"lights\"], shader.uniforms, {\n        time: {\n          type: \"f\",\n          value: 0\n        }\n      }]);\n      shader.uniforms = uniforms.current;\n      shader.vertexShader = vertShader;\n      shader.fragmentShader = fragShader;\n    };\n\n    geometry.current = new SphereBufferGeometry(32, 128, 128);\n    sphere.current = new Mesh(geometry.current, material.current);\n    sphere.current.position.z = 0;\n    sphere.current.modifier = Math.random();\n    scene.current.add(sphere.current);\n    return function () {\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, []);\n  useEffect(function () {\n    var dirLight = new DirectionalLight(colorWhite, 0.6);\n    var ambientLight = new AmbientLight(colorWhite, // themeId === \"light\" ? 0.8 : 0.1\n    0.2);\n    dirLight.position.z = 200;\n    dirLight.position.x = 100;\n    dirLight.position.y = 100;\n    lights.current = [dirLight, ambientLight];\n    scene.current.background = _construct(Color, _toConsumableArray(rgbToThreeColor(rgbBackground)));\n    lights.current.forEach(function (light) {\n      return scene.current.add(light);\n    });\n    return function () {\n      removeLights(lights.current);\n    };\n  }, [rgbBackground, colorWhite, themeId]);\n  useEffect(function () {\n    var width = windowSize.width,\n        height = windowSize.height;\n    var adjustedHeight = height + height * 0.3;\n    renderer.current.setSize(width, adjustedHeight);\n    camera.current.aspect = width / adjustedHeight;\n    camera.current.updateProjectionMatrix(); // Render a single frame on resize when not animating\n\n    if (prefersReducedMotion) {\n      renderer.current.render(scene.current, camera.current);\n    }\n\n    if (width <= media.mobile) {\n      sphere.current.position.x = 14;\n      sphere.current.position.y = 10;\n    } else if (width <= media.tablet) {\n      sphere.current.position.x = 18;\n      sphere.current.position.y = 14;\n    } else {\n      sphere.current.position.x = 22;\n      sphere.current.position.y = 16;\n    }\n  }, [prefersReducedMotion, windowSize]);\n  useEffect(function () {\n    var onMouseMove = function onMouseMove(event) {\n      var rotation = sphere.current.rotation;\n      var position = {\n        x: event.clientX / window.innerWidth,\n        y: event.clientY / window.innerHeight\n      };\n\n      if (!sphereSpring.current) {\n        sphereSpring.current = value(rotation.toArray(), function (values) {\n          return rotation.set(values[0], values[1], sphere.current.rotation.z);\n        });\n      }\n\n      tweenRef.current = spring({\n        from: sphereSpring.current.get(),\n        to: [position.y / 2, position.x / 2],\n        stiffness: 30,\n        damping: 20,\n        velocity: sphereSpring.current.getVelocity(),\n        mass: 2,\n        restSpeed: 0.0001\n      }).start(sphereSpring.current);\n    };\n\n    if (true && !prefersReducedMotion && isInViewport) {\n      window.addEventListener(\"mousemove\", onMouseMove);\n    }\n\n    return function () {\n      var _tweenRef$current;\n\n      if (true) {\n        window.removeEventListener(\"mousemove\", onMouseMove);\n      }\n\n      (_tweenRef$current = tweenRef.current) === null || _tweenRef$current === void 0 ? void 0 : _tweenRef$current.stop();\n    };\n  }, [isInViewport, prefersReducedMotion]);\n  useEffect(function () {\n    var animation;\n\n    var animate = function animate() {\n      animation = requestAnimationFrame(animate);\n\n      if (uniforms.current !== undefined) {\n        uniforms.current.time.value = 0.00005 * (Date.now() - start.current);\n      }\n\n      sphere.current.rotation.z += 0.001;\n      renderer.current.render(scene.current, camera.current);\n    };\n\n    if (!prefersReducedMotion && isInViewport) {\n      animate();\n    } else {\n      renderer.current.render(scene.current, camera.current);\n    }\n\n    return function () {\n      cancelAnimationFrame(animation);\n    };\n  }, [isInViewport, prefersReducedMotion]);\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    appear: true,\n    \"in\": true,\n    onEnter: reflow,\n    timeout: 3000,\n    children: function children(status) {\n      return /*#__PURE__*/_jsxDEV(\"canvas\", _objectSpread({\n        \"aria-hidden\": true,\n        className: classNames(\"displacement-sphere\", \"displacement-sphere--\".concat(status)),\n        ref: canvasRef\n      }, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DisplacementSphere, \"CikhONBUlCNMzSFC733kczjsZK4=\", false, function () {\n  return [usePrefersReducedMotion, useInViewport, useWindowSize];\n});\n\n_c = DisplacementSphere;\nexport default DisplacementSphere;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplacementSphere\");","map":{"version":3,"sources":["/home/rinspiron/Desktop/portfolio/portfolio/components/DisplacementSphere/index.js"],"names":["useEffect","useRef","classNames","Vector2","sRGBEncoding","WebGLRenderer","PerspectiveCamera","Scene","DirectionalLight","AmbientLight","UniformsUtils","UniformsLib","MeshPhongMaterial","SphereBufferGeometry","Mesh","Color","value","spring","vertShader","fragShader","Transition","usePrefersReducedMotion","useInViewport","useWindowSize","reflow","media","rgbToThreeColor","cleanScene","removeLights","cleanRenderer","DisplacementSphere","props","theme","rgbBackground","themeId","colorWhite","start","Date","now","canvasRef","mouse","renderer","camera","scene","lights","uniforms","material","geometry","sphere","tweenRef","sphereSpring","prefersReducedMotion","isInViewport","windowSize","window","innerWidth","innerHeight","current","canvas","antialias","powerPreference","setSize","setPixelRatio","outputEncoding","position","z","onBeforeCompile","shader","merge","time","type","vertexShader","fragmentShader","modifier","Math","random","add","dirLight","ambientLight","x","y","background","forEach","light","width","height","adjustedHeight","aspect","updateProjectionMatrix","render","mobile","tablet","onMouseMove","event","rotation","clientX","clientY","toArray","values","set","from","get","to","stiffness","damping","velocity","getVelocity","mass","restSpeed","addEventListener","removeEventListener","stop","animation","animate","requestAnimationFrame","undefined","cancelAnimationFrame","status"],"mappings":"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","sourcesContent":["/**\n * Many thanks to Hamish William.\n * Source: https://github.com/HamishMW/portfolio\n * Also check out their website: https://hamishw.com/\n */\n\nimport { useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  Vector2,\n  sRGBEncoding,\n  WebGLRenderer,\n  PerspectiveCamera,\n  Scene,\n  DirectionalLight,\n  AmbientLight,\n  UniformsUtils,\n  UniformsLib,\n  MeshPhongMaterial,\n  SphereBufferGeometry,\n  Mesh,\n  Color,\n} from \"three\";\n\nimport { value, spring } from \"popmotion\";\nimport vertShader from \"./sphereVertShader\";\nimport fragShader from \"./sphereFragShader\";\nimport { Transition } from \"react-transition-group\";\nimport usePrefersReducedMotion from \"./hooks/usePrefersReducedMotion\";\nimport useInViewport from \"./hooks/useInViewport\";\nimport useWindowSize from \"./hooks/useWindowSize\";\nimport { reflow } from \"./utils/transition\";\nimport { media, rgbToThreeColor } from \"./utils/style\";\nimport { cleanScene, removeLights, cleanRenderer } from \"./utils/three\";\nimport \"./DisplacementSphere.module.scss\";\n\nconst DisplacementSphere = (props) => {\n  const { rgbBackground, themeId, colorWhite } = props.theme;\n  const start = useRef(Date.now());\n  const canvasRef = useRef();\n  const mouse = useRef();\n  const renderer = useRef();\n  const camera = useRef();\n  const scene = useRef();\n  const lights = useRef();\n  const uniforms = useRef();\n  const material = useRef();\n  const geometry = useRef();\n  const sphere = useRef();\n  const tweenRef = useRef();\n  const sphereSpring = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const isInViewport = useInViewport(canvasRef);\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    const { innerWidth, innerHeight } = window;\n    mouse.current = new Vector2(0.8, 0.5);\n    renderer.current = new WebGLRenderer({\n      canvas: canvasRef.current,\n      antialias: false,\n      powerPreference: \"high-performance\",\n    });\n    renderer.current.setSize(innerWidth, innerHeight);\n    renderer.current.setPixelRatio(1);\n    renderer.current.outputEncoding = camera.current = new PerspectiveCamera(\n      54,\n      innerWidth / innerHeight,\n      0.1,\n      100\n    );\n    camera.current.position.z = 52;\n\n    scene.current = new Scene();\n\n    material.current = new MeshPhongMaterial();\n    material.current.onBeforeCompile = (shader) => {\n      uniforms.current = UniformsUtils.merge([\n        UniformsLib[\"ambient\"],\n        UniformsLib[\"lights\"],\n        shader.uniforms,\n        { time: { type: \"f\", value: 0 } },\n      ]);\n\n      shader.uniforms = uniforms.current;\n      shader.vertexShader = vertShader;\n      shader.fragmentShader = fragShader;\n    };\n\n    geometry.current = new SphereBufferGeometry(32, 128, 128);\n\n    sphere.current = new Mesh(geometry.current, material.current);\n    sphere.current.position.z = 0;\n    sphere.current.modifier = Math.random();\n    scene.current.add(sphere.current);\n\n    return () => {\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, []);\n\n  useEffect(() => {\n    const dirLight = new DirectionalLight(colorWhite, 0.6);\n    const ambientLight = new AmbientLight(\n      colorWhite,\n      // themeId === \"light\" ? 0.8 : 0.1\n      0.2\n    );\n\n    dirLight.position.z = 200;\n    dirLight.position.x = 100;\n    dirLight.position.y = 100;\n\n    lights.current = [dirLight, ambientLight];\n    scene.current.background = new Color(...rgbToThreeColor(rgbBackground));\n    lights.current.forEach((light) => scene.current.add(light));\n\n    return () => {\n      removeLights(lights.current);\n    };\n  }, [rgbBackground, colorWhite, themeId]);\n\n  useEffect(() => {\n    const { width, height } = windowSize;\n\n    const adjustedHeight = height + height * 0.3;\n    renderer.current.setSize(width, adjustedHeight);\n    camera.current.aspect = width / adjustedHeight;\n    camera.current.updateProjectionMatrix();\n\n    // Render a single frame on resize when not animating\n    if (prefersReducedMotion) {\n      renderer.current.render(scene.current, camera.current);\n    }\n\n    if (width <= media.mobile) {\n      sphere.current.position.x = 14;\n      sphere.current.position.y = 10;\n    } else if (width <= media.tablet) {\n      sphere.current.position.x = 18;\n      sphere.current.position.y = 14;\n    } else {\n      sphere.current.position.x = 22;\n      sphere.current.position.y = 16;\n    }\n  }, [prefersReducedMotion, windowSize]);\n\n  useEffect(() => {\n    const onMouseMove = (event) => {\n      const { rotation } = sphere.current;\n\n      const position = {\n        x: event.clientX / window.innerWidth,\n        y: event.clientY / window.innerHeight,\n      };\n\n      if (!sphereSpring.current) {\n        sphereSpring.current = value(rotation.toArray(), (values) =>\n          rotation.set(values[0], values[1], sphere.current.rotation.z)\n        );\n      }\n\n      tweenRef.current = spring({\n        from: sphereSpring.current.get(),\n        to: [position.y / 2, position.x / 2],\n        stiffness: 30,\n        damping: 20,\n        velocity: sphereSpring.current.getVelocity(),\n        mass: 2,\n        restSpeed: 0.0001,\n      }).start(sphereSpring.current);\n    };\n\n    if (process.browser && !prefersReducedMotion && isInViewport) {\n      window.addEventListener(\"mousemove\", onMouseMove);\n    }\n\n    return () => {\n      if (process.browser) {\n        window.removeEventListener(\"mousemove\", onMouseMove);\n      }\n\n      tweenRef.current?.stop();\n    };\n  }, [isInViewport, prefersReducedMotion]);\n\n  useEffect(() => {\n    let animation;\n\n    const animate = () => {\n      animation = requestAnimationFrame(animate);\n\n      if (uniforms.current !== undefined) {\n        uniforms.current.time.value = 0.00005 * (Date.now() - start.current);\n      }\n\n      sphere.current.rotation.z += 0.001;\n      renderer.current.render(scene.current, camera.current);\n    };\n\n    if (!prefersReducedMotion && isInViewport) {\n      animate();\n    } else {\n      renderer.current.render(scene.current, camera.current);\n    }\n\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, [isInViewport, prefersReducedMotion]);\n\n  return (\n    <Transition appear in onEnter={reflow} timeout={3000}>\n      {(status) => (\n        <canvas\n          aria-hidden\n          className={classNames(\n            \"displacement-sphere\",\n            `displacement-sphere--${status}`\n          )}\n          ref={canvasRef}\n          {...props}\n        />\n      )}\n    </Transition>\n  );\n};\n\nexport default DisplacementSphere;\n"]},"metadata":{},"sourceType":"module"}