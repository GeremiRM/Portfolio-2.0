{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rinspiron/Desktop/portfolio/portfolio/components/cards/modal.js\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport styles from \"./modal.module.scss\";\nexport default function ModalCard({\n  children\n}) {\n  const {\n    0: isOpened,\n    1: setOpened\n  } = useState(false);\n  const closed = children.length > 1 ? children[0] : null;\n  const open = children.length > 1 ? children[1] : children[0];\n  const node = useRef();\n\n  const handleClick = e => {\n    setOpened(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n\n    if (isOpened) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, [isOpened]);\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: isOpened ? /*#__PURE__*/_jsxDEV(motion.div, {\n      ref: node,\n      className: styles.modal,\n      onClick: () => {\n        setOpened(false);\n      },\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      exit: {\n        opacity: 0\n      },\n      transition: {\n        duration: \"0.2\"\n      },\n      children: open\n    }, \"modal\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n      onClick: () => {\n        setOpened(true);\n      },\n      children: closed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/home/rinspiron/Desktop/portfolio/portfolio/components/cards/modal.js"],"names":["useState","useEffect","useRef","motion","AnimatePresence","styles","ModalCard","children","isOpened","setOpened","closed","length","open","node","handleClick","e","document","addEventListener","body","style","overflow","removeEventListener","modal","opacity","duration"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,eAAjB,QAAwC,eAAxC;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiC;AAC9C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMU,MAAM,GAAGH,QAAQ,CAACI,MAAT,GAAkB,CAAlB,GAAsBJ,QAAQ,CAAC,CAAD,CAA9B,GAAoC,IAAnD;AACA,QAAMK,IAAI,GAAGL,QAAQ,CAACI,MAAT,GAAkB,CAAlB,GAAsBJ,QAAQ,CAAC,CAAD,CAA9B,GAAoCA,QAAQ,CAAC,CAAD,CAAzD;AACA,QAAMM,IAAI,GAAGX,MAAM,EAAnB;;AACA,QAAMY,WAAW,GAAIC,CAAD,IAAO;AACzBN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFD;;AAGAR,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCH,WAAvC;;AACA,QAAIN,QAAJ,EAAc;AACZQ,MAAAA,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACE,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,OAA/B;AACD;;AACD,WAAO,MAAM;AACXJ,MAAAA,QAAQ,CAACK,mBAAT,CAA6B,WAA7B,EAA0CP,WAA1C;AACD,KAFD;AAGD,GAVQ,EAUN,CAACN,QAAD,CAVM,CAAT;AAYA,sBACE,QAAC,eAAD;AAAA,cACGA,QAAQ,gBACP,QAAC,MAAD,CAAQ,GAAR;AAEE,MAAA,GAAG,EAAEK,IAFP;AAGE,MAAA,SAAS,EAAER,MAAM,CAACiB,KAHpB;AAIE,MAAA,OAAO,EAAE,MAAM;AACbb,QAAAA,SAAS,CAAC,KAAD,CAAT;AACD,OANH;AAOE,MAAA,OAAO,EAAE;AACPc,QAAAA,OAAO,EAAE;AADF,OAPX;AAUE,MAAA,OAAO,EAAE;AACPA,QAAAA,OAAO,EAAE;AADF,OAVX;AAaE,MAAA,IAAI,EAAE;AACJA,QAAAA,OAAO,EAAE;AADL,OAbR;AAgBE,MAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE;AADA,OAhBd;AAAA,gBAoBGZ;AApBH,OACO,OADP;AAAA;AAAA;AAAA;AAAA,YADO,gBAwBP,QAAC,MAAD,CAAQ,GAAR;AACE,MAAA,OAAO,EAAE,MAAM;AACbH,QAAAA,SAAS,CAAC,IAAD,CAAT;AACD,OAHH;AAAA,gBAKGC;AALH;AAAA;AAAA;AAAA;AAAA;AAzBJ;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport styles from \"./modal.module.scss\"\n\nexport default function ModalCard({ children }) {\n  const [isOpened, setOpened] = useState(false);\n  const closed = children.length > 1 ? children[0] : null;\n  const open = children.length > 1 ? children[1] : children[0];\n  const node = useRef();\n  const handleClick = (e) => {\n    setOpened(false);\n  };\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClick);\n    if (isOpened) {\n      document.body.style.overflow = \"hidden\";\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClick);\n    };\n  }, [isOpened]);\n\n  return (\n    <AnimatePresence>\n      {isOpened ? (\n        <motion.div\n          key={\"modal\"}\n          ref={node}\n          className={styles.modal}\n          onClick={() => {\n            setOpened(false);\n          }}\n          initial={{\n            opacity: 0,\n          }}\n          animate={{\n            opacity: 1,\n          }}\n          exit={{\n            opacity: 0,\n          }}\n          transition={{\n            duration: \"0.2\",\n          }}\n        >\n          {open}\n        </motion.div>\n      ) : (\n        <motion.div\n          onClick={() => {\n            setOpened(true);\n          }}\n        >\n          {closed}\n        </motion.div>\n      )}\n    </AnimatePresence>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}