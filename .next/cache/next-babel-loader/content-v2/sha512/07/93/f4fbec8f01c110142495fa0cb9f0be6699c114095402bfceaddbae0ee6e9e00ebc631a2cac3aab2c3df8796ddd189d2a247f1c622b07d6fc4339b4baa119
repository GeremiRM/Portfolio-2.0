{"ast":null,"code":"import _defineProperty from \"/home/rinspiron/Desktop/portfolio/portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/home/rinspiron/Desktop/portfolio/portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/rinspiron/Desktop/portfolio/portfolio/components/DecoderText/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Many thanks to Hamish William.\n * Source: https://github.com/HamishMW/portfolio\n * Also check out their website: https://hamishw.com/\n */\nimport { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport usePrefersReducedMotion from '../hooks/usePrefersReducedMotion';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from '../VisuallyHidden';\nimport './index.module.scss'; // prettier-ignore\n\nvar glyphs = ['ア', 'イ', 'ウ', 'エ', 'オ', 'カ', 'キ', 'ク', 'ケ', 'コ', 'サ', 'シ', 'ス', 'セ', 'ソ', 'タ', 'チ', 'ツ', 'テ', 'ト', 'ナ', 'ニ', 'ヌ', 'ネ', 'ノ', 'ハ', 'ヒ', 'フ', 'ヘ', 'ホ', 'マ', 'ミ', 'ム', 'メ', 'モ', 'ヤ', 'ユ', 'ヨ', 'ー', 'ラ', 'リ', 'ル', 'レ', 'ロ', 'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン', 'ガ', 'ギ', 'グ', 'ゲ', 'ゴ', 'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ', 'ダ', 'ヂ', 'ヅ', 'デ', 'ド', 'バ', 'ビ', 'ブ', 'ベ', 'ボ', 'パ', 'ピ', 'プ', 'ペ', 'ポ'];\nvar CharType = {\n  Glyph: 'glyph',\n  Value: 'value'\n};\n\nfunction shuffle(content, output, position) {\n  return content.map(function (value, index) {\n    if (index < position) {\n      return {\n        type: CharType.Value,\n        value: value\n      };\n    }\n\n    if (position % 1 < 0.5) {\n      var rand = Math.floor(Math.random() * glyphs.length);\n      return {\n        type: CharType.Glyph,\n        value: glyphs[rand]\n      };\n    }\n\n    return {\n      type: CharType.Glyph,\n      value: output[index].value\n    };\n  });\n}\n\nvar DecoderText = function DecoderText(_ref) {\n  _s();\n\n  var text = _ref.text,\n      _ref$start = _ref.start,\n      start = _ref$start === void 0 ? true : _ref$start,\n      _ref$delay = _ref.delay,\n      startDelay = _ref$delay === void 0 ? 0 : _ref$delay,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"text\", \"start\", \"delay\", \"className\"]);\n\n  var output = useRef([{\n    type: CharType.Glyph,\n    value: ''\n  }]);\n  var container = useRef();\n  var reduceMotion = usePrefersReducedMotion();\n  useEffect(function () {\n    var containerInstance = container.current;\n    var content = text.split('');\n    var animation;\n\n    var renderOutput = function renderOutput() {\n      var characterMap = output.current.map(function (item) {\n        return \"<span class=\\\"decoder-text__\".concat(item.type, \"\\\">\").concat(item.value, \"</span>\");\n      });\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    var springValue = value(0, function (position) {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion) {\n      animation = chain(delay(startDelay), spring({\n        from: 0,\n        to: content.length,\n        stiffness: 8,\n        damping: 5\n      })).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map(function (value, index) {\n        return {\n          type: CharType.Value,\n          value: content[index]\n        };\n      });\n      renderOutput();\n    }\n\n    return function () {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n  return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({\n    className: classNames('decoder-text', className)\n  }, rest), {}, {\n    children: [/*#__PURE__*/_jsxDEV(VisuallyHidden, {\n      className: \"decoder-text__label\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      \"aria-hidden\": true,\n      className: \"decoder-text__content\",\n      ref: container\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DecoderText, \"+SP3hZpI26/bRt+9331pkABMiI4=\", false, function () {\n  return [usePrefersReducedMotion];\n});\n\n_c = DecoderText;\nexport default _c2 = /*#__PURE__*/memo(DecoderText);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DecoderText\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/rinspiron/Desktop/portfolio/portfolio/components/DecoderText/index.js"],"names":["useRef","useEffect","memo","classNames","usePrefersReducedMotion","spring","chain","delay","value","VisuallyHidden","glyphs","CharType","Glyph","Value","shuffle","content","output","position","map","index","type","rand","Math","floor","random","length","DecoderText","text","start","startDelay","className","rest","container","reduceMotion","containerInstance","current","split","animation","renderOutput","characterMap","item","innerHTML","join","springValue","from","to","stiffness","damping","stop"],"mappings":"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","sourcesContent":["/**\n * Many thanks to Hamish William.\n * Source: https://github.com/HamishMW/portfolio\n * Also check out their website: https://hamishw.com/\n */\n\n\nimport { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport usePrefersReducedMotion from '../hooks/usePrefersReducedMotion';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from '../VisuallyHidden';\nimport './index.module.scss';\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphs.length);\n      return { type: CharType.Glyph, value: glyphs[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n"]},"metadata":{},"sourceType":"module"}